{"version":3,"file":"component---src-pages-concepts-storage-tsx-305b2e107b69796954d9.js","mappings":"yIAqBA,UAnB6DA,IAAA,IAAC,UAAEC,GAAWD,EAAA,OACvEE,EAAAA,cAAA,WAASD,UAAa,wBAAwBA,KAC1CC,EAAAA,cAAA,UAAI,WACJA,EAAAA,cAAA,UAAI,qBACJA,EAAAA,cAAA,SAAG,kLACHA,EAAAA,cAAA,SAAG,wCAAqCA,EAAAA,cAAA,YAAM,WAAc,mBAC5DA,EAAAA,cAAA,SAAG,2BAAwBA,EAAAA,cAAA,YAAM,yBAA4B,iGAC7DA,EAAAA,cAAA,SAAG,0CACwCA,EAAAA,cAAA,YAAM,mBAA4B,+BAA4BA,EAAAA,cAAA,cAAQ,KAAU,YAASA,EAAAA,cAAA,WAChIA,EAAAA,cAAA,UACIA,EAAAA,cAAA,UAAIA,EAAAA,cAAA,YAAM,4DACVA,EAAAA,cAAA,UAAIA,EAAAA,cAAA,YAAM,qCACVA,EAAAA,cAAA,UAAIA,EAAAA,cAAA,YAAM,uCACVA,EAAAA,cAAA,UAAIA,EAAAA,cAAA,YAAM,mDAGZ,C","sources":["webpack://eagleeye-dev/./src/pages/concepts/storage.tsx"],"sourcesContent":["import React from 'react';\n\nconst ConceptStoragePage : React.FC<{className? : string}> = ({ className }) => (\n    <article className={ `concept-storage-page ${ className }` }>\n        <h1>Storage</h1>\n        <h3>About the Storage</h3>\n        <p>The Eagle Eye context allows for a user-defined Storage object to be provided for maintaining the integrity of the initial context state at a location of the user's choosing.</p>\n        <p>This, it accepts, via its Provider's <code>storage</code> optional prop.</p>\n        <p>The context defaults to <code>window.sessionstorage</code> in supporting environments. Otherwise, it defaults to its own internal memory-based storage.</p>\n        <p>\n            A valid storage object is of the type: <code>IStorage&lt;State&gt;</code> implementing the following <strong>4</strong> methods:<br />\n            <ol>\n                <li><code>clone: (data: State) =&gt; State; // expects a state clone</code></li>\n                <li><code>getItem: (key: string) =&gt; State;</code></li>\n                <li><code>removeItem: (key: string) =&gt; void;</code></li>\n                <li><code>setItem: (key: string, data: State) =&gt; void;</code></li>\n            </ol>\n        </p>\n    </article>\n);\n\nexport default ConceptStoragePage;"],"names":["_ref","className","React"],"sourceRoot":""}