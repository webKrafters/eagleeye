"use strict";(self.webpackChunkeagleeye_dev=self.webpackChunkeagleeye_dev||[]).push([[1793],{75326:function(e,t){Object.defineProperty(t,"__esModule",{value:!0});t.default={icon:function(e,t){return{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-783.5-27.9L512 239.9l339.8 588.2H172.2z",fill:e}},{tag:"path",attrs:{d:"M172.2 828.1h679.6L512 239.9 172.2 828.1zM560 720a48.01 48.01 0 01-96 0 48.01 48.01 0 0196 0zm-16-304v184c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V416c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8z",fill:t}},{tag:"path",attrs:{d:"M464 720a48 48 0 1096 0 48 48 0 10-96 0zm16-304v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8z",fill:e}}]}},name:"warning",theme:"twotone"}},89800:function(e,t,n){var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=(r=n(46007))&&r.__esModule?r:{default:r};t.default=o,e.exports=o},46007:function(e,t,n){var r=n(24994),o=n(73738);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=r(n(12897)),l=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=o(e)&&"function"!=typeof e)return{default:e};var n=u(t);if(n&&n.has(e))return n.get(e);var r={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var l in e)if("default"!==l&&{}.hasOwnProperty.call(e,l)){var s=a?Object.getOwnPropertyDescriptor(e,l):null;s&&(s.get||s.set)?Object.defineProperty(r,l,s):r[l]=e[l]}return r.default=e,n&&n.set(e,r),r}(n(96540)),s=r(n(75326)),c=r(n(3827));function u(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(u=function(e){return e?n:t})(e)}var i=function(e,t){return l.createElement(c.default,(0,a.default)((0,a.default)({},e),{},{ref:t,icon:s.default}))},m=l.forwardRef(i);t.default=m},20003:function(e,t,n){n.r(t);var r=n(96540),o=n(51314),a=n(9372),l=n(16040),s=n(7689),c=n(22990),u=n(4732);t.default=e=>{let{className:t}=e;return r.createElement("article",{className:`external-access-page ${t}`},r.createElement("h1",null,"External Access"),r.createElement(u.A,null,"Normally, the context must be rendered within the component tree in order to make its store accessible - any attempt to the contrary leads to a ",r.createElement("code",null,"UsageError"),"."),r.createElement(u.A,null,"However, once rendered, its store becomes accessible both within its context component tree and externally."),r.createElement("h3",null,"How do I access the store externally?"),r.createElement(u.A,null,"This is done by obtaining a reference to the Provider component. Once obtained, its ",r.createElement("code",null,"current")," property ","(","i.e. which holds the referenced store object",")"," can be passed around to other parts of the application."),r.createElement(u.A,null,"When the reference is no longer needed, be sure to unsubscribe all observers attached through this store reference during this phase."),r.createElement(u.A,null,"For external access to the context, ",r.createElement("strong",null,"4")," store methods have been exposed. Namely:"),r.createElement("ol",{id:"external-apis"},r.createElement("li",null,r.createElement("strong",null,r.createElement("code",null,"store.getState()"),":")," Provides a static snapshot of the current state."),r.createElement("li",null,r.createElement("strong",null,r.createElement("code",null,"store.resetState()"),":")," Please see descriptions in the ",r.createElement(l.A,{to:"/concepts/store/resetstate"},"store")," page."),r.createElement("li",null,r.createElement("strong",null,r.createElement("code",null,"store.setState()"),":")," Please see descriptions in the ",r.createElement(l.A,{to:"/concepts/store/setstate"},"store")," page."),r.createElement("li",null,r.createElement("strong",null,r.createElement("code",null,"store.subscribe(...)"),":")," Provides an API for  manual subscription to the state. E.g.",r.createElement("pre",null,"store.subscribe( // returning an unsubsciber function\n    ( changes: Changes<State> ) => void\n) => VoidFunction"),"Provides an API for  manual subscription to the state.")),r.createElement("h4",null,"Let's see some code!"),r.createElement("div",{className:"snippet-box"},r.createElement(s.A,null,"provider-demo.js"),r.createElement("div",null,"Making our Provider accessible to the parent component."),r.createElement(o.A,null,"import React, { forwardRef } from 'react';\nimport ObservableContext from './context'; // using example from the \"Getting Started Page\"\nimport Ui from './ui'; // using example from the \"Getting Started Page\"\n\nconst initState = {a: { b: { x: { y: { z: [ 2022 ] } } } }};\n\nconst ProviderDemo = forwardRef(( props, ref ) => {\n    // signify to parent the exit of the storeRef Provider on component unmount.\n    useEffect(() => () => setTimeout( () => props?.onDismount(), 0 ), []);\n    return (\n        <ObservableContext.Provider ref={ ref } value={ initState }>\n            <Ui />\n        </ObservableContext.Provider>\n    );\n};\nProviderDemo.displayName = 'ProviderDemo';\n\nexport default ProviderDemo;")),r.createElement("div",{className:"snippet-box"},r.createElement(s.A,null,"app.js"),r.createElement("div",null,"Grabbing a ref to the Provider component and sharing it with a class."),r.createElement(o.A,null,"import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport ProviderDemo from './provider-demo';\nimport StoreMonitor from './debug-monitor';\nconst App = () => {\n    const storeRef = useRef();\n    const [ refChangeCount, setRefChangeCount ] = useState( 0 );\n    const updateMonitor = useCallback(() => setRefChangeCount( c => c + 1 ), []);\n    const [ monitor ] = useState(() => new StoreMonitor( d => console.log( d ) ));\n    useEffect(() => {\n        monitor.source = storeRef.current;\n        return () => monitor.cleanup();\n    }, [ refChangeCount ]);\n    return (\n        <ProviderDemo\n            onDismount={ updateMonitor }\n            ref={ storeRef }\n        />\n    );\n}\nexport default App;")),r.createElement("div",{className:"snippet-box"},r.createElement(s.A,null,"debug-monitor.js"),r.createElement("div",null,"Using a simple class instance to montor and report changes in the store in realtime."),r.createElement(o.A,null,"class Monitor {\n    #onEvent;\n    #store;\n    #unsub;\n    constructor( onEvent, store ) {\n        this.onEvent = onEvent;\n        this.source = store;\n    }\n    set onEvent( handler ) { this.#onEvent = handler }\n    get source() { return this.#store }\n    set source( store ) {\n        if( store === this.#store ) { return }\n        this.cleanup();\n        if( !store ) { return }\n        this.#store = store;\n        this.#onEvent( this.#store.getState() );\n        this.#unsub = store.subscribe(\n            () => this.#onEvent( this.#store.getState() )\n        );\n    }\n    cleanup() {\n        this.#unsub?.();\n        this.#store = null;\n    }\n}\nexport default Monitor;")),r.createElement(a.A,{title:"Pro Tips"},r.createElement(u.A,null,"Store references are simply ReactJS references to the Eagle Eye Provider component. Therefore, after ",r.createElement("code",null,"unmounting")," the ",r.createElement("code",null,"Provider")," component, the ",r.createElement("code",null,"storeRef.current")," becomes empty. So therefore:"),r.createElement(c.A,null,r.createElement("div",null,"if the need exists to maintain the store beyond the life of the Provider, then keep a reference to the state snapshot returned by the last valid ",r.createElement("code",null,"storeRef.current.getState()")," call.")),r.createElement(c.A,null,r.createElement("div",null,"be sure to unsubscribe all external subscribers attached to the ",r.createElement("code",null,"Provider"),"'s store reference, at or prior to the ",r.createElement("code",null,"unmount")," phase of the ",r.createElement("code",null,"Provider")," component.")),r.createElement(u.A,null,"State references are always snapshots of the state at the time of access. In essence, the state returned by ",r.createElement("code",null,"storeRef.current.getState()")," are not affected by subsequent updates to the store's state. Any updates to this acquired state never affects the context's state. So therefore, the ",r.createElement("strong",null,"4")," considerations:"),r.createElement(c.A,null,r.createElement("div",null,"use only the ",r.createElement("code",null,"storeRef.current.setState(...)")," to update the context internal store.")),r.createElement(c.A,null,r.createElement("div",null,r.createElement("code",null,"storeRef.current.getState()")," must be used to obtain the current state value.")),r.createElement(c.A,null,r.createElement("div",null,"use your ",r.createElement("code",null,"storeRef.current.subscribe(...)")," to manually subscribe to state changes and refresh your current state value in realtime.")),r.createElement(c.A,null,r.createElement("div",null,"use the ",r.createElement("code",null,"unsubscriber")," returned by your storeRef's ",r.createElement("code",null,"subscribe(...)")," to unsubscribe from the store when needed."))))}},9372:function(e,t,n){n.d(t,{A:function(){return l}});var r=n(96540),o=n(55851);const a=(0,r.memo)((e=>{let{children:t}=e;return!!r.Children.count(t)&&r.createElement(r.Fragment,null,r.createElement(o.A,null)," ","string"==typeof t?r.createElement("strong",null,t):t)}));a.displayName="Alert.Header";var l=e=>{let{title:t,children:n,className:o="",...l}=e;return r.createElement("section",Object.assign({},l,{className:"alert"+(o.length?` ${o}`:"")}),r.createElement(a,null,t),r.createElement("div",{className:"content"},r.Children.map(n,(e=>e))))}},55851:function(e,t,n){n.d(t,{A:function(){return s}});var r=n(96540),o=n(89800),a=n.n(o);const l=(0,r.memo)((()=>r.createElement(a(),{style:{fontSize:24},twoToneColor:["#f40","#fd0"]})));l.displayName="WarningIcon";var s=l},22990:function(e,t,n){n.d(t,{A:function(){return l}});var r=n(96540);const o=e=>{let{className:t}=e;return"list-item"+(t?` ${t}`:"")},a=e=>{let{children:t}=e;const n=(0,r.useMemo)((()=>{var e;return{className:o(t.props),role:null!==(e=t.props.role)&&void 0!==e?e:"listitem"}}),[t.props.className,t.props.role]);return(0,r.cloneElement)(t,n)};a.displayName="ListItem";var l=a},4732:function(e,t,n){n.d(t,{A:function(){return a}});var r=n(96540);const o=(0,r.forwardRef)(((e,t)=>{let{children:n,className:o,...a}=e;return r.createElement("div",Object.assign({role:"paragraph"},a,{className:"paragraph"+(o?` ${o}`:""),ref:t}),r.Children.map(n,(e=>e)))}));o.displayName="Paragraph";var a=o},7689:function(e,t,n){n.d(t,{A:function(){return a}});var r=n(96540);const o=e=>{let{children:t,...n}=e;return r.createElement("header",Object.assign({},n,{className:"segment-header"}),t)};o.displayName="SegmentHeader";var a=o}}]);
//# sourceMappingURL=component---src-pages-external-access-tsx-46d95af089278431865c.js.map