"use strict";(self.webpackChunkeagleeye_dev=self.webpackChunkeagleeye_dev||[]).push([[3282],{92546:function(e,t,a){a.r(t);var n=a(96540),s=a(16040),l=a(51314);t.default=e=>{let{className:t}=e;return n.createElement("article",{className:`concept-store-setstate-tags-combination-usage-page ${t}`},n.createElement("h1",null,"Combination Tags Usage:"),n.createElement("p",null,"Tags may be used in combination with the default usage where all top-level tag command results in a given property are merged into state followed by the merging of the rest of the property changes."),n.createElement("p",null,"However, certain aspects of the above strategy is user-platform implementation dependent. For finer control, a combination of this strategy with ",n.createElement(s.A,{to:"/concepts/store/setstate#batched-update"},"Batched Updates")," may be considered."),n.createElement("h4",null,"Example:"),n.createElement(l.A,null,"import * as ctx from '@webkrafters/react-observable-context';\n\nconst state = {\n    a: { b: [{ x: 7, y: 8, z: 9 }, { x: 17, y: 18, z: 19 }] },\n    j: 10,\n    q: [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]\n};\n\nstore.setState({\n    a: {\n        b: {\n            /* evaluated 1st */ [ ctx.DELETE_TAG ]: [ 0 ], // upon deleting state.a.b[0] -> state.a.b[1] becomes the new state.a.b[0]\n            /* evaluated 3rd */ 0: ctx.CLEAR_TAG, // clear the new state.a.b[0]\n            /* evaluated 4th */ 2: { x: 47, y: 48, z: 49 }, // add new item at state.a.b[2],\n            /* evaluated 2md */ [ ctx.PUSH_TAG ]: [{ x: 107, y: 108, z: 109 }] // appends state.a.b[1]\n        }\n    },\n    j: { [ ctx.SET_TAG ]: currentValue => currentValue < 10 ? currentValue : 0 },\n    q: {\n        /* evaluated 1st */ [ ctx.MOVE_TAG ]: [ 5, 3, 2 ],\n        /* evaluated 2md */ 12: 11\n    }\n});\n// => {\n//      a: { b: [{}, { x: 107, y: 108, z: 109 }, { x: 47, y: 48, z: 49 }] },\n//      j: 0,\n//      q: [ 1, 2, 3, 6, 7, 4, 5, 8, 9, <empty>, <empty>, <empty>, 11 ]\n// }"))}}}]);
//# sourceMappingURL=component---src-pages-concepts-store-setstate-tags-order-of-operations-tsx-da2d17dcdeb85151d246.js.map