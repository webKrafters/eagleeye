{"version":3,"file":"component---src-pages-external-access-tsx-46d95af089278431865c.js","mappings":"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","sources":["webpack://eagleeye-dev/./node_modules/@ant-design/icons-svg/lib/asn/WarningTwoTone.js","webpack://eagleeye-dev/./node_modules/@ant-design/icons/WarningTwoTone.js","webpack://eagleeye-dev/./node_modules/@ant-design/icons/lib/icons/WarningTwoTone.js","webpack://eagleeye-dev/./src/pages/external-access.tsx","webpack://eagleeye-dev/./src/partials/alert/component.tsx","webpack://eagleeye-dev/./src/partials/icons/warning/components.tsx","webpack://eagleeye-dev/./src/partials/list-item/component.tsx","webpack://eagleeye-dev/./src/partials/paragraph/component.tsx","webpack://eagleeye-dev/./src/partials/segment-header/component.tsx"],"sourcesContent":["\"use strict\";\n// This icon file is generated automatically.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WarningTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-783.5-27.9L512 239.9l339.8 588.2H172.2z\", \"fill\": primaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M172.2 828.1h679.6L512 239.9 172.2 828.1zM560 720a48.01 48.01 0 01-96 0 48.01 48.01 0 0196 0zm-16-304v184c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V416c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M464 720a48 48 0 1096 0 48 48 0 10-96 0zm16-304v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8z\", \"fill\": primaryColor } }] }; }, \"name\": \"warning\", \"theme\": \"twotone\" };\nexports.default = WarningTwoTone;\n","'use strict';\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  \n  var _WarningTwoTone = _interopRequireDefault(require('./lib/icons/WarningTwoTone'));\n  \n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n  \n  var _default = _WarningTwoTone;\n  exports.default = _default;\n  module.exports = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _WarningTwoTone = _interopRequireDefault(require(\"@ant-design/icons-svg/lib/asn/WarningTwoTone\"));\nvar _AntdIcon = _interopRequireDefault(require(\"../components/AntdIcon\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nvar WarningTwoTone = function WarningTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(_AntdIcon.default, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, props), {}, {\n    ref: ref,\n    icon: _WarningTwoTone.default\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(WarningTwoTone);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'WarningTwoTone';\n}\nvar _default = exports.default = RefIcon;","import React from 'react';\n\nimport CodeBlock from '../partials/code-block';\n\nimport Alert from '../partials/alert';\nimport Anchor from '../partials/anchor';\nimport Header from '../partials/segment-header';\nimport ListItem from '../partials/list-item';\nimport Paragraph from '../partials/paragraph';\n\nconst providerCode =\n`import React, { forwardRef } from 'react';\nimport ObservableContext from './context'; // using example from the \"Getting Started Page\"\nimport Ui from './ui'; // using example from the \"Getting Started Page\"\n\nconst initState = {a: { b: { x: { y: { z: [ 2022 ] } } } }};\n\nconst ProviderDemo = forwardRef(( props, ref ) => {\n    // signify to parent the exit of the storeRef Provider on component unmount.\n    useEffect(() => () => setTimeout( () => props?.onDismount(), 0 ), []);\n    return (\n        <ObservableContext.Provider ref={ ref } value={ initState }>\n            <Ui />\n        </ObservableContext.Provider>\n    );\n};\nProviderDemo.displayName = 'ProviderDemo';\n\nexport default ProviderDemo;`\n\nconst setupCode =\n`import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport ProviderDemo from './provider-demo';\nimport StoreMonitor from './debug-monitor';\nconst App = () => {\n    const storeRef = useRef();\n    const [ refChangeCount, setRefChangeCount ] = useState( 0 );\n    const updateMonitor = useCallback(() => setRefChangeCount( c => c + 1 ), []);\n    const [ monitor ] = useState(() => new StoreMonitor( d => console.log( d ) ));\n    useEffect(() => {\n        monitor.source = storeRef.current;\n        return () => monitor.cleanup();\n    }, [ refChangeCount ]);\n    return (\n        <ProviderDemo\n            onDismount={ updateMonitor }\n            ref={ storeRef }\n        />\n    );\n}\nexport default App;`\n\nconst externalAccessCode =\n`class Monitor {\n    #onEvent;\n    #store;\n    #unsub;\n    constructor( onEvent, store ) {\n        this.onEvent = onEvent;\n        this.source = store;\n    }\n    set onEvent( handler ) { this.#onEvent = handler }\n    get source() { return this.#store }\n    set source( store ) {\n        if( store === this.#store ) { return }\n        this.cleanup();\n        if( !store ) { return }\n        this.#store = store;\n        this.#onEvent( this.#store.getState() );\n        this.#unsub = store.subscribe(\n            () => this.#onEvent( this.#store.getState() )\n        );\n    }\n    cleanup() {\n        this.#unsub?.();\n        this.#store = null;\n    }\n}\nexport default Monitor;`\n\nconst RESET_STATE_SAMPLE =\n`store.subscribe( // returning an unsubsciber function\n    ( changes: Changes<State> ) => void\n) => VoidFunction`\n\nconst ExternalAccessPage : React.FC<{className : string}> = ({ className }) => (\n    <article className={ `external-access-page ${ className }` }>\n        <h1>External Access</h1>\n        <Paragraph>Normally, the context must be rendered within the component tree in order to make its store accessible - any attempt to the contrary leads to a <code>UsageError</code>.</Paragraph>\n        <Paragraph>However, once rendered, its store becomes accessible both within its context component tree and externally.</Paragraph>\n        <h3>How do I access the store externally?</h3>\n        <Paragraph>This is done by obtaining a reference to the Provider component. Once obtained, its <code>current</code> property { '(' }i.e. which holds the referenced store object{ ')' } can be passed around to other parts of the application.</Paragraph>\n        <Paragraph>When the reference is no longer needed, be sure to unsubscribe all observers attached through this store reference during this phase.</Paragraph>\n        <Paragraph>For external access to the context, <strong>4</strong> store methods have been exposed. Namely:</Paragraph>\n        <ol id=\"external-apis\">\n            <li><strong><code>store.getState()</code>:</strong> Provides a static snapshot of the current state.</li>\n            <li><strong><code>store.resetState()</code>:</strong> Please see descriptions in the <Anchor to=\"/concepts/store/resetstate\">store</Anchor> page.</li>\n            <li><strong><code>store.setState()</code>:</strong> Please see descriptions in the <Anchor to=\"/concepts/store/setstate\">store</Anchor> page.</li>\n            <li>\n                <strong><code>store.subscribe(...)</code>:</strong> Provides an API for  manual subscription to the state. E.g.\n                <pre>{ RESET_STATE_SAMPLE }</pre>\n                Provides an API for  manual subscription to the state.\n            </li>\n        </ol>\n        <h4>Let's see some code!</h4>\n        <div className=\"snippet-box\">\n            <Header>provider-demo.js</Header>\n            <div>Making our Provider accessible to the parent component.</div>\n            <CodeBlock>{ providerCode }</CodeBlock>\n        </div>\n        <div className=\"snippet-box\">\n            <Header>app.js</Header>\n            <div>Grabbing a ref to the Provider component and sharing it with a class.</div>\n            <CodeBlock>{ setupCode }</CodeBlock>\n        </div>\n        <div className=\"snippet-box\">\n            <Header>debug-monitor.js</Header>\n            <div>Using a simple class instance to montor and report changes in the store in realtime.</div>\n            <CodeBlock>{ externalAccessCode }</CodeBlock>\n        </div>\n        <Alert title=\"Pro Tips\">\n            <Paragraph>Store references are simply ReactJS references to the Eagle Eye Provider component. Therefore, after <code>unmounting</code> the <code>Provider</code> component, the <code>storeRef.current</code> becomes empty. So therefore:</Paragraph>\n            <ListItem><div>if the need exists to maintain the store beyond the life of the Provider, then keep a reference to the state snapshot returned by the last valid <code>storeRef.current.getState()</code> call.</div></ListItem>\n            <ListItem><div>be sure to unsubscribe all external subscribers attached to the <code>Provider</code>'s store reference, at or prior to the <code>unmount</code> phase of the <code>Provider</code> component.</div></ListItem>\n            <Paragraph>State references are always snapshots of the state at the time of access. In essence, the state returned by <code>storeRef.current.getState()</code> are not affected by subsequent updates to the store's state. Any updates to this acquired state never affects the context's state. So therefore, the <strong>4</strong> considerations:</Paragraph>\n            <ListItem><div>use only the <code>storeRef.current.setState(...)</code> to update the context internal store.</div></ListItem>\n            <ListItem><div><code>storeRef.current.getState()</code> must be used to obtain the current state value.</div></ListItem>\n            <ListItem><div>use your <code>storeRef.current.subscribe(...)</code> to manually subscribe to state changes and refresh your current state value in realtime.</div></ListItem>\n            <ListItem><div>use the <code>unsubscriber</code> returned by your storeRef's <code>subscribe(...)</code> to unsubscribe from the store when needed.</div></ListItem>\n        </Alert>\n    </article>\n);\n\nexport default ExternalAccessPage;","import type { FC, NamedExoticComponent, ReactNode, HTMLProps } from 'react';\n\nimport React, { Children, memo } from 'react';\n\nimport WarningIcon from '../icons/warning';\n\nimport './style.scss';\n\nexport interface Props extends Omit<HTMLProps<HTMLDivElement>, \"title\"> { title? : ReactNode };\n\nconst Header : NamedExoticComponent<{children : Props[\"title\"]}> = memo(({ children }) => !!Children.count( children ) && (\n    <>\n        <WarningIcon />\n        { ' ' }\n        { typeof children === 'string'\n            ? ( <strong>{ children }</strong> )\n            : children\n        }\n    </>\n));\nHeader.displayName = 'Alert.Header';\n\nconst Alert : FC<Props> = ({ title, children, className = '', ...props }) => (\n    <section\n        { ...props }\n        className={ `alert${ className.length ? ` ${ className }` : '' }` }\n    >\n        <Header>{ title }</Header>\n        <div className=\"content\">\n            { Children.map( children, c => c ) }\n        </div>\n    </section>\n);\n\nexport default Alert;\n","import React, { memo } from 'react';\n\nimport WarningTwoToneIcon from '@ant-design/icons/WarningTwoTone';\n\nconst Component : React.MemoExoticComponent<React.FC> = memo(() => (\n    <WarningTwoToneIcon\n        style={{ fontSize: 24 }}\n        twoToneColor={[ '#f40', '#fd0' ]}\n    />\n));\nComponent.displayName = 'WarningIcon';\n\nexport default Component;","import React, { cloneElement, useMemo } from 'react';\n\nimport './style.scss';\n\nconst getClassName = ({ className } : {\n    className? : string\n}) => (\n    `list-item${ className ? ` ${ className }` : '' }`\n);\n\nconst ListItem : React.FC<{children : JSX.Element}> = ({ children }) => {\n    const props = useMemo(() => ({\n        className: getClassName( children.props ),\n        role: children.props.role ?? 'listitem'\n    }), [\n        children.props.className,\n        children.props.role\n    ]);\n    return cloneElement( children, props );\n};\n\nListItem.displayName = 'ListItem';\n\nexport default ListItem;","import type { NamedExoticComponent } from 'react';\n\nimport React, { Children, forwardRef } from 'react';\n\nimport './style.scss';\n\nexport type Props = JSX.IntrinsicElements[ \"div\" ];\n\nconst Paragraph : NamedExoticComponent<Props> = forwardRef<\n    HTMLDivElement, Props\n>(({ children, className, ...props }, ref ) => (\n    <div\n        role=\"paragraph\"\n        { ...props }\n        className={ `paragraph${ className ? ` ${ className }` : '' }` }\n        ref={ ref }\n    >\n        { Children.map( children, c => c ) }\n    </div>\n));\n\nParagraph.displayName = 'Paragraph';\n\nexport default Paragraph;","import React from 'react';\n\nimport './style.scss';\n\nexport interface Props {\n    children : React.ReactNode,\n    id? : string\n};\n\nconst Header : React.FC<Props> = ({ children, ...props }) => (\n    <header { ...props } className=\"segment-header\">\n        { children }\n    </header>\n);\n\nHeader.displayName = 'SegmentHeader';\n\nexport default Header;"],"names":["Object","defineProperty","exports","value","primaryColor","secondaryColor","obj","_default","__esModule","module","_interopRequireDefault","_typeof","_objectSpread2","React","e","r","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_WarningTwoTone","_AntdIcon","WeakMap","WarningTwoTone","props","ref","createElement","icon","RefIcon","forwardRef","_ref","className","Paragraph","id","Anchor","to","Header","CodeBlock","Alert","title","ListItem","memo","children","Children","count","WarningIcon","displayName","_ref2","assign","length","map","c","Component","WarningTwoToneIcon","style","fontSize","twoToneColor","getClassName","useMemo","_children$props$role","role","cloneElement"],"sourceRoot":""}