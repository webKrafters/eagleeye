"use strict";(self.webpackChunkeagleeye_dev=self.webpackChunkeagleeye_dev||[]).push([[4232],{23766:function(e,t,l){l.r(t);var n=l(96540);t.default=e=>{let{className:t}=e;return n.createElement("article",{className:`concept-storage-page ${t}`},n.createElement("h1",null,"Storage"),n.createElement("h3",null,"About the Storage"),n.createElement("p",null,"The Eagle Eye context allows for a user-defined Storage object to be provided for maintaining the integrity of the initial context state at a location of the user's choosing."),n.createElement("p",null,"This, it accepts, via its Provider's ",n.createElement("code",null,"storage")," optional prop."),n.createElement("p",null,"The context defaults to ",n.createElement("code",null,"window.sessionstorage")," in supporting environments. Otherwise, it defaults to its own internal memory-based storage."),n.createElement("p",null,"A valid storage object is of the type: ",n.createElement("code",null,"IStorage<State>")," implementing the following ",n.createElement("strong",null,"4")," methods:",n.createElement("br",null),n.createElement("ol",null,n.createElement("li",null,n.createElement("code",null,"clone: (data: State) => State; // expects a state clone")),n.createElement("li",null,n.createElement("code",null,"getItem: (key: string) => State;")),n.createElement("li",null,n.createElement("code",null,"removeItem: (key: string) => void;")),n.createElement("li",null,n.createElement("code",null,"setItem: (key: string, data: State) => void;")))))}}}]);
//# sourceMappingURL=component---src-pages-concepts-storage-tsx-305b2e107b69796954d9.js.map