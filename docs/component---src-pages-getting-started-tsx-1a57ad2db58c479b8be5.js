"use strict";(self.webpackChunkeagleeye_dev=self.webpackChunkeagleeye_dev||[]).push([[1305],{8743:function(e,t,n){n.r(t),n.d(t,{Head:function(){return i}});var a=n(96540),r=n(16040),o=n(51314),l=n(7689),s=n(61059),c=n(4732);t.default=e=>{let{className:t}=e;return a.createElement("article",{className:`getting-started-page ${t}`},a.createElement("h1",null,"Getting Started"),a.createElement(c.A,{className:"snippet-intro",id:"install"},"Eagle Eye context and the React.Context API share a similar setup flow. Let us begin by installing the Eagle Eye context package."),a.createElement(c.A,{className:"snippet-box"},a.createElement(o.A,{isInline:!0},"npm install --save react-eagleeye")),a.createElement(c.A,{className:"snippet-intro",id:"create-context-usage"},a.createElement("h3",null,"Creating the context store"),"To obtain a fresh context store, just call the parameterless ",a.createElement("code",null,"createContext()")," function."),a.createElement(c.A,{className:"snippet-box"},a.createElement(l.A,null,"context.js"),a.createElement(o.A,null,"import { createContext } from '@webkrafters/react-observable-context';\nexport default createContext();")),a.createElement("div",{className:"snippet-intro",id:"provider-usage"},a.createElement("h3",null,"Providing the context store"),a.createElement(c.A,null,"Similar to the React.Context API, you can make the context store available to any section of the component tree by wrapping it in the context store's Provider."),a.createElement(c.A,null,"Further readings on the Eagle Eye Context Provider could be found ",a.createElement(r.A,{to:"/concepts/provider"},"here"),".")),a.createElement(c.A,{className:"snippet-box"},a.createElement(l.A,null,"provider-demo.js"),a.createElement(o.A,null,"import React, { useEffect, useState } from 'react';\nimport ObservableContext from './context';\nimport Ui from './ui';\n\nconst createInitialState = c = ({\n    a: { b: { c, x: { y: { z: [ 2022 ] } } } }\n});\n\nconst ProviderDemo = ({ ageInMinutes: c = 0 }) => {\n    \n    const [ value, setValue ] = useState(() => createInitialState( c ));\n\n    useEffect(() => {\n        // similar to  `store.setState`, use the following to update\n        // only the changed slice of the context internal state.\n        // Please use the `Set State` link in the TOC for more details.\n        setValue({ a: { b: { c } } }); // OR\n        // setValue({ a: { b: { c: { '@@REPLACE': c } } } });\n        // Do not do the following: it will override the context internal state.\n        // setValue({ ...value, a: { ...value.a, b: { ...value.a.b, c } } });\n    }, [ c ]);\n\n    return (\n        <ObservableContext.Provider value={ value }>\n            <Ui />\n        </ObservableContext.Provider>\n    );\n};\nProviderDemo.displayName = 'ProviderDemo';\n\nexport default ProviderDemo;")),a.createElement("div",{className:"snippet-intro",id:"connect-usage"},a.createElement("h3",null,"Consuming the context store"),a.createElement(c.A,null,"There are two ways of consuming the Eagle Eye context store: The HOC method and the React Hook method."),a.createElement(c.A,null,"Let's tackle the HOC method first. This method uses the ",a.createElement("code",null,"connect(...)")," HOC function to wire up the context store to your consumer component."),a.createElement(c.A,null,'It embodies the "set-it-and-forget-it" paradigm. Just set up a list of property paths to state slices to observe ',"(","see ",a.createElement(r.A,{to:"/concepts/selector-map"},"Selector Map"),")",". Context takes care of the rest."),a.createElement(c.A,null,"The following is a sample of the HOC consumer method.")),a.createElement(c.A,{className:"snippet-box"},a.createElement(l.A,null,"ui.js"),a.createElement(o.A,null,"import React, { useCallback, useEffect } from 'react';\nimport { connect } from '@webkrafters/react-observable-context';\nimport ObservableContext from './context';\n\nexport const YearText = ({ data }) => ( <div>Year: { data.year }</div> );\n\nexport const YearInput = ({ data, resetState, setState }) => {\n    const onChange = useCallback( e => setState({\n        a: { b: { x: { y: { z: { 0: e.target.value } } } } }\n    }), [ setState ]);\n\n    useEffect(() => {\n        data.year > 2049 && resetState([ 'a.b.c' ]);\n    }, [ data.year ]);\n\n    return ( <div>Year: <input type=\"number\" onChange={ onChange } /></div> );\n};\n\nconst withConnector = connect( ObservablContext, { year: 'a.b.x.y.z[0]' } );\nconst Client1 = withConnector( YearText );\nconst Client2 = withConnector( YearInput );\n\nconst Ui = () => (\n    <div>\n        <Client1 />\n        <Client2 />\n    </div>\n);\n\nexport default Ui;")),a.createElement("div",{className:"snippet-intro",id:"usecontext-usage"},a.createElement("h3",null,"Consuming the context store (React Hook method)"),a.createElement(c.A,null,"The following shows how to consume the Eagle Eye context store through the hook method."),a.createElement(c.A,null,"This method uses the ",a.createElement("code",null,"useContext(...)")," function to expose the store to the consumer component."),a.createElement(c.A,null,a.createElement(s.A,null,"In addition to setting up a map of property paths to state slices to observe ","(","see ",a.createElement(r.A,{to:"/concepts/selector-map"},"Selector Map"),")",", the consumer compoent may have to be wrapped in a ",a.createElement("code",null,"React.memo(...)")," HOC to shield it from cascading rerenders from parent/anscestor components."))),a.createElement(c.A,{className:"snippet-box"},a.createElement(l.A,null,"ui.js"),a.createElement(o.A,null,"import React, { memo, useCallback, useEffect } from 'react';\nimport { useContext } from '@webkrafters/react-observable-context';\nimport ObservableContext from './context';\n\nconst selectorMap = { year: 'a.b.x.y.z[0]' };\n\nconst Client1 = memo(() => { // memoize to prevent 'no-change' renders from the parent.\n    const { data } = useContext( ObservableContext, selectorMap );\n    return ( <div>Year: { data.year }</div> );\n});\n\nconst Client2 = memo(() => { // memoize to prevent 'no-change' renders from the parent.\n\n    const { data, setState, resetState } = useContext( ObservableContext, selectorMap );\n\n    const onChange = useCallback( e => setState({\n        a: { b: { x: { y: { z: { 0: e.target.value } } } } }\n    }), [ setState ]);\n\n    useEffect(() => {\n        data.year > 2049 && resetState([ 'a.b.c' ]);\n    }, [ data.year ]);\n\n    return ( <div>Year: <input type=\"number\" onChange={ onChange } /></div> );\n});\n\nconst Ui = () => (\n    <div>\n        <Client1 />\n        <Client2 />\n    </div>\n);\n\nexport default Ui;")),a.createElement(c.A,{className:"snippet-intro"},"Wiring up your Eagle Eye context to the rest of the application is identical to the React.Context API. The following is a contrived snippet to demonstrate."),a.createElement(c.A,{className:"snippet-box"},a.createElement(l.A,null,"app.js"),a.createElement(o.A,null,"import React, { useEffect, useState } from 'react';\nimport ProviderDemo from './provider-demo';\n\nconst MILLIS_PER_MINUTE = 6e4;\n\nlet numCreated = 0;\n\nconst App = () => {\n    const [ age, updateAge ] = useState( 0 );\n    const [ testNumber ] = useState( () => ++numCreated );\n\n    useEffect(() => {\n        const t = setTimeout(\n            () => updateAge( age => age + 1 ),\n            MILLIS_PER_MINUTE\n        ); \n        return () => clearTimeout( t );\n    }, [ age ]);\n\n    return (\n        <div>\n            <h2>App instance #: { testNumber }</H2>\n            <ProviderDemo ageInMinutes={ age } />\n        </div>\n    );\n}\nexport default App;")))};const i=()=>a.createElement("title",null,"Getting Started")},61059:function(e,t,n){n.d(t,{A:function(){return o}});var a=n(96540);const r=e=>{let{children:t}=e;return a.createElement("p",{className:"note-pad"},a.createElement("strong",{className:"title"},"Note:")," ",a.Children.map(t,(e=>e)))};r.displayName="NotePad";var o=r},4732:function(e,t,n){n.d(t,{A:function(){return o}});var a=n(96540);const r=(0,a.forwardRef)(((e,t)=>{let{children:n,className:r,...o}=e;return a.createElement("div",Object.assign({role:"paragraph"},o,{className:"paragraph"+(r?` ${r}`:""),ref:t}),a.Children.map(n,(e=>e)))}));r.displayName="Paragraph";var o=r},7689:function(e,t,n){n.d(t,{A:function(){return o}});var a=n(96540);const r=e=>{let{children:t,...n}=e;return a.createElement("header",Object.assign({},n,{className:"segment-header"}),t)};r.displayName="SegmentHeader";var o=r}}]);
//# sourceMappingURL=component---src-pages-getting-started-tsx-1a57ad2db58c479b8be5.js.map