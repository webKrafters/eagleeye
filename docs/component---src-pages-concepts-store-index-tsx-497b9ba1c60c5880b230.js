"use strict";(self.webpackChunkeagleeye_dev=self.webpackChunkeagleeye_dev||[]).push([[1187],{31863:function(e,t,l){l.r(t);var r=l(96540),a=l(16040);t.default=e=>{let{className:t}=e;return r.createElement("article",{className:`concept-store-page ${t}`},r.createElement("h1",null,"Store"),r.createElement("h3",null,"What is the store?"),r.createElement("p",null,"An Eagle Eye context ",r.createElement("code",null,"store")," is the client's portal into the context's underlying state."),r.createElement("p",null,"It exposes ",r.createElement("strong",null,"3")," properties namely:"),r.createElement("p",null,r.createElement("strong",{id:"data",style:{marginRight:"0.5rem"}},"1."),r.createElement("strong",{style:{marginRight:"0.25rem"}},"data: "),"which is an object holding resolved state slices as declared in the selector map. ",r.createElement(a.A,{to:"/concepts/selector-map#selector-map-example"},"See selector map to store data example here")),r.createElement("p",null,r.createElement("strong",{style:{marginRight:"0.5rem"}},"2."),r.createElement("strong",{style:{marginRight:"0.25rem"}},r.createElement(a.A,{to:"/concepts/store/resetstate"},"resetState"),": "),r.createElement("code",null,"(propertyPaths?: Array<string>) => void // resets slices of state referenced by the property paths to their initial values.")),r.createElement("p",null,r.createElement("strong",{style:{marginRight:"0.5rem"}},"3."),r.createElement("strong",{style:{marginRight:"0.25rem"}},r.createElement(a.A,{to:"/concepts/store/setstate"},"setState"),": "),r.createElement("code",null,"(changes: Changes<State>) => void // merges only new/changed state slices.")))}}}]);
//# sourceMappingURL=component---src-pages-concepts-store-index-tsx-497b9ba1c60c5880b230.js.map