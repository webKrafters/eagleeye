{"version":3,"file":"component---src-pages-concepts-store-setstate-tags-order-of-operations-tsx-2cd81d72d24742f0241e.js","mappings":"+JA6CA,UAVkFA,IAAA,IAAC,UAAEC,GAAWD,EAAA,OAC5FE,EAAAA,cAAA,WAASD,UAAa,sDAAsDA,KACxEC,EAAAA,cAAA,UAAI,2BACJA,EAAAA,cAAA,SAAG,sNACHA,EAAAA,cAAA,SAAG,oJAAiJA,EAAAA,cAACC,EAAAA,EAAM,CAACC,GAAG,2CAA0C,mBAAwB,uBACjOF,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAACG,EAAAA,EAAS,KAnCjB,qiCAoCa,C","sources":["webpack://eagleeye-dev/./src/pages/concepts/store/setstate/tags/order-of-operations.tsx"],"sourcesContent":["import React from 'react';\n\nimport Anchor from '../../../../../partials/anchor';\nimport CodeBlock from '../../../../../partials/code-block';\n\nconst SAMPLE =\n`import * as ctx from '@webkrafters/react-observable-context';\n\nconst state = {\n    a: { b: [{ x: 7, y: 8, z: 9 }, { x: 17, y: 18, z: 19 }] },\n    j: 10,\n    q: [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]\n};\n\nstore.setState({\n    a: {\n        b: {\n            /* evaluated 1st */ [ ctx.DELETE_TAG ]: [ 0 ], // upon deleting state.a.b[0] -> state.a.b[1] becomes the new state.a.b[0]\n            /* evaluated 3rd */ 0: ctx.CLEAR_TAG, // clear the new state.a.b[0]\n            /* evaluated 4th */ 2: { x: 47, y: 48, z: 49 }, // add new item at state.a.b[2],\n            /* evaluated 2md */ [ ctx.PUSH_TAG ]: [{ x: 107, y: 108, z: 109 }] // appends state.a.b[1]\n        }\n    },\n    j: { [ ctx.SET_TAG ]: currentValue => currentValue < 10 ? currentValue : 0 },\n    q: {\n        /* evaluated 1st */ [ ctx.MOVE_TAG ]: [ 5, 3, 2 ],\n        /* evaluated 2md */ 12: 11\n    }\n});\n// => {\n//      a: { b: [{}, { x: 107, y: 108, z: 109 }, { x: 47, y: 48, z: 49 }] },\n//      j: 0,\n//      q: [ 1, 2, 3, 6, 7, 4, 5, 8, 9, <empty>, <empty>, <empty>, 11 ]\n// }`;\n\nconst ConceptStoreSetStateTagsCombinationPage : React.FC<{className? : string}> = ({ className }) => (\n    <article className={ `concept-store-setstate-tags-combination-usage-page ${ className }` }>\n        <h1>Combination Tags Usage:</h1>\n        <p>Tags may be used in combination with the default usage where all top-level tag command results in a given property are sequentially merged into state followed by the merging of the rest of the property changes.</p>\n        <p>However, certain aspects of the above strategy is user-platform implementation dependent. For finer control, a combination of this strategy with <Anchor to=\"/concepts/store/setstate#batched-update\">Batched Updates</Anchor> may be considered.</p>\n        <h3>Example:</h3>\n        <CodeBlock>{ SAMPLE }</CodeBlock>\n    </article>\n);\n\nexport default ConceptStoreSetStateTagsCombinationPage;"],"names":["_ref","className","React","Anchor","to","CodeBlock"],"sourceRoot":""}