"use strict";(self.webpackChunkeagleeye_dev=self.webpackChunkeagleeye_dev||[]).push([[5406],{98502:function(e,t,a){a.r(t);var l=a(96540),r=a(16040),n=a(4732);t.default=e=>{let{className:t}=e;return l.createElement("article",{className:`concept-provider-page ${t}`},l.createElement("h1",null,"Provider"),l.createElement("div",null,l.createElement("h3",null,"What is the Provider?"),l.createElement("div",null,l.createElement(n.A,null,"The Provider component is a property of the Eagle Eye context object. As a ",l.createElement("code",null,"React.Context")," API based provider, it accepts the customary ",l.createElement("code",null,"children")," and ",l.createElement("code",null,"value")," props. It also accepts ",l.createElement("strong",null,"2")," optional props: ",l.createElement(r.A,{to:"/concepts/prehooks"},l.createElement("code",null,"prehooks"))," and ",l.createElement(r.A,{to:"/concepts/storage"},l.createElement("code",null,"storage")),"."),l.createElement(n.A,null,"External direct access to the context store may be obtained via the ",l.createElement("code",null,"ref")," attribute. Please see a ",l.createElement(r.A,{to:"/getting-started#provider-usage"},"Provider Usage")," sample."),l.createElement(n.A,null,"Routinely, the ",l.createElement("code",null,"value"),"  prop is initialized with the full initial state. It may only be updated with parts of the state which are changing. Please see a ",l.createElement(r.A,{to:"/getting-started#provider-usage"},"Provider Usage")," sample."))))}},4732:function(e,t,a){a.d(t,{A:function(){return n}});var l=a(96540);const r=(0,l.forwardRef)(((e,t)=>{let{children:a,className:r,...n}=e;return l.createElement("div",Object.assign({role:"paragraph"},n,{className:"paragraph"+(r?` ${r}`:""),ref:t}),l.Children.map(a,(e=>e)))}));r.displayName="Paragraph";var n=r}}]);
//# sourceMappingURL=component---src-pages-concepts-provider-tsx-0afe37d26544a4a25b20.js.map