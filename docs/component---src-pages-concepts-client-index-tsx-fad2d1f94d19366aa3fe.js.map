{"version":3,"file":"component---src-pages-concepts-client-index-tsx-fad2d1f94d19366aa3fe.js","mappings":"4JA8BA,UAzB4DA,IAAA,IAAC,UAAEC,GAAWD,EAAA,OACtEE,EAAAA,cAAA,WAASD,UAAa,uBAAuBA,KACzCC,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,WACIA,EAAAA,cAAA,UAAI,qBACJA,EAAAA,cAAA,WACIA,EAAAA,cAACC,EAAAA,EAAS,KAAC,gGAEPD,EAAAA,cAAA,UACIA,EAAAA,cAAA,UAAI,8BAA2BA,EAAAA,cAACE,EAAAA,EAAM,CAACC,GAAG,mBAAkB,cAAmB,SAC/EH,EAAAA,cAAA,UAAI,sEAAmEA,EAAAA,cAACE,EAAAA,EAAM,CAACC,GAAG,gBAAe,WAAgB,eAGzHH,EAAAA,cAACC,EAAAA,EAAS,KAAC,uCAEPD,EAAAA,cAAA,UACIA,EAAAA,cAAA,UAAIA,EAAAA,cAACE,EAAAA,EAAM,CAACC,GAAG,qCAAoC,qBAAoB,IAAK,wBAAuB,MACnGH,EAAAA,cAAA,UAAIA,EAAAA,cAACE,EAAAA,EAAM,CAACC,GAAG,kCAAiC,qBAAoB,IAAK,aAAY,UAK/F,C,sECnBd,MAAMF,GAA0CG,EAAAA,EAAAA,aAE9C,CAAAN,EAAoCO,KAAG,IAAtC,SAAEC,EAAQ,UAAEP,KAAcQ,GAAOT,EAAA,OAChCE,EAAAA,cAAA,MAAAQ,OAAAC,OAAA,CACIC,KAAK,aACAH,EAAK,CACVR,UAAa,aAAYA,EAAa,IAAIA,IAAe,IACzDM,IAAMA,IAEJM,EAAAA,SAASC,IAAKN,GAAUO,GAAKA,IAC7B,IAGVZ,EAAUa,YAAc,YAExB,O","sources":["webpack://eagleeye-dev/./src/pages/concepts/client/index.tsx","webpack://eagleeye-dev/./src/partials/paragraph/component.tsx"],"sourcesContent":["import React from 'react';\n\nimport Anchor from '../../../partials/anchor';\nimport Paragraph from '../../../partials/paragraph';\n\nconst ConceptClientPage : React.FC<{className? : string}> = ({ className }) => (\n    <article className={ `concept-client-page ${ className }` }>\n        <h1>Client</h1>\n        <div>\n            <h3>What is a client?</h3>\n            <div>\n                <Paragraph>\n                    A client is any component consuming the observable context. A client consumes the context by:\n                    <ul>\n                        <li>either using the Eagle Eye <Anchor to=\"/api#usecontext\">useContext</Anchor> hook</li>\n                        <li>or embedding itself within the connector returned by the Eagle Eye <Anchor to=\"/api#connect\">connect</Anchor> function</li>\n                    </ul>\n                </Paragraph>\n                <Paragraph>\n                    Please see examples respectively in:\n                    <ol>\n                        <li><Anchor to=\"/getting-started#usecontext-usage\">Consuming context { '(' }hook with memo method{ ')' }</Anchor></li>\n                        <li><Anchor to=\"/getting-started#connect-usage\">Consuming context { '(' }hoc method{ ')' }</Anchor></li>\n                    </ol>\n                </Paragraph>\n            </div>\n        </div>\n    </article>\n);\n\nexport default ConceptClientPage;","import type { NamedExoticComponent } from 'react';\n\nimport React, { Children, forwardRef } from 'react';\n\nimport './style.scss';\n\nexport type Props = JSX.IntrinsicElements[ \"div\" ];\n\nconst Paragraph : NamedExoticComponent<Props> = forwardRef<\n    HTMLDivElement, Props\n>(({ children, className, ...props }, ref ) => (\n    <div\n        role=\"paragraph\"\n        { ...props }\n        className={ `paragraph${ className ? ` ${ className }` : '' }` }\n        ref={ ref }\n    >\n        { Children.map( children, c => c ) }\n    </div>\n));\n\nParagraph.displayName = 'Paragraph';\n\nexport default Paragraph;"],"names":["_ref","className","React","Paragraph","Anchor","to","forwardRef","ref","children","props","Object","assign","role","Children","map","c","displayName"],"sourceRoot":""}