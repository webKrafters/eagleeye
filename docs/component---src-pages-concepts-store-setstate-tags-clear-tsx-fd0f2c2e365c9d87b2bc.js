"use strict";(self.webpackChunkeagleeye_dev=self.webpackChunkeagleeye_dev||[]).push([[4212],{9428:function(e,t,a){a.r(t),a.d(t,{Head:function(){return l}});var s=a(96540),n=a(51314);t.default=e=>{let{className:t}=e;return s.createElement("article",{className:`concept-store-setstate-clear-tag-usage-page ${t}`},s.createElement("h1",null,s.createElement("code",null,"store.setState")," @@CLEAR Tag Usage"),s.createElement("strong",null,"Sample:")," ",s.createElement("code",null,"store.setState({ stateKey0: '@@CLEAR' });"),s.createElement("p",null," "," "),s.createElement("strong",null,"Sample 2:"),s.createElement("pre",null,"store.setState({\n    stateKey0: {\n        '@@CLEAR': <any> // the value has no effect - removes `state.stateKey0` all the same.\n    }\n});"),s.createElement("h3",null,"Example:"),s.createElement(n.A,null,"import { CLEAR_TAG } from '@webkrafters/react-observable-context'; // CLEAR_TAG = \"@@CLEAR\"\n\nconst state = {\n    a: { b: [{ x: 7, y: 8, z: 9 }, { x: 17, y: 18, z: 19 }] },\n    j: 10\n};\n\n/* empties the state; sets state = {} */\nstore.setState( CLEAR_TAG ) // or store.setState({ [ CLEAR_TAG ]: <anything> })\n\n/* empties the value at state.a.b; sets state.a.b = [] */\nstore.setState({ a: { b: CLEAR_TAG } }) // or store.setState({ a: { b: { [ CLEAR_TAG ]: <anything> } } })\n\n/* empties the value at state.a.j; sets state.a.j = null */\nstore.setState({ a: { j: CLEAR_TAG } }) // or store.setState({ a: { j: { [ CLEAR_TAG ]: <anything> } } })\n\n/* empties the value at state.a.b[ 0 ]; sets state.a.b = [{}] */\nstore.setState({ a: { b: [ CLEAR_TAG ] } }) // or store.setState({ a: { b: [ { [ CLEAR_TAG ]: <anything> } ] } })\n\n/* empties the value at state.a.b[0]; sets state.a.b = [{}, state.a.b[1]] */\nstore.setState({ a: { b: [ CLEAR_TAG, state.a.b[1] ] } }) // or store.setState({ a: { b: [ { [ CLEAR_TAG ]: <anything> }, state.a.b[1] ] } })\n\n/* empties the value at state.a.b[0]; sets state.a.b = [{}, a.b[1]] using indexing (RECOMMENDED) */\nstore.setState({ a: { b: { 0: CLEAR_TAG } } }) // or store.setState({ a: { b: { 0: { [ CLEAR_TAG ]: <anything> } } } })"))};const l=()=>s.createElement("title",null,"eagleeyejs: @@CLEAR")}}]);
//# sourceMappingURL=component---src-pages-concepts-store-setstate-tags-clear-tsx-fd0f2c2e365c9d87b2bc.js.map