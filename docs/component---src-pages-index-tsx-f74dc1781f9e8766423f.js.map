{"version":3,"file":"component---src-pages-index-tsx-f74dc1781f9e8766423f.js","mappings":"4MAyEA,UAhDoCA,IAAA,IAAC,UAAEC,EAAS,KAAEC,GAAMF,EAAA,OACvDG,EAAAA,cAAA,WAASF,UAAa,cAAcA,KACnCE,EAAAA,cAAA,UAAI,4BACJA,EAAAA,cAACC,EAAAA,EAAS,KAAC,6DACXD,EAAAA,cAAA,WACCA,EAAAA,cAAA,aAAO,YAAW,IACjBA,EAAAA,cAACE,EAAAA,EAAM,CAACC,GAAKJ,aAAI,EAAJA,EAAMK,KAAKC,aAAaC,IAAIC,KAAgB,8BAK3DP,EAAAA,cAAA,OAAKF,UAAU,gBACdE,EAAAA,cAAA,cAAQ,iBACRA,EAAAA,cAAA,aACCA,EAAAA,cAAA,cAAQ,SACRA,EAAAA,cAACQ,EAAAA,EAAS,CAACC,UAAQ,GAAC,sCAIrBT,EAAAA,cAAA,aACCA,EAAAA,cAAA,cAAQ,cACRA,EAAAA,cAACQ,EAAAA,EAAS,CAACC,UAAQ,GAAC,8DAKtBT,EAAAA,cAAA,WACCA,EAAAA,cAAA,aAAO,gCAA+B,IACrCA,EAAAA,cAACE,EAAAA,EAAM,CAACC,GAAKJ,aAAI,EAAJA,EAAMK,KAAKC,aAAaC,IAAII,MAAiB,kBAK5DV,EAAAA,cAAA,WACCA,EAAAA,cAAA,aAAO,YAASA,EAAAA,cAAA,YAAM,SAEvBA,EAAAA,cAAA,UAAI,uBACJA,EAAAA,cAAA,UACCA,EAAAA,cAAA,UAAI,+CAA4CA,EAAAA,cAACE,EAAAA,EAAM,CAACC,GAAG,4BAA2BH,EAAAA,cAAA,YAAM,mBAA8B,KAC1HA,EAAAA,cAAA,UAAI,4CAAyCA,EAAAA,cAACE,EAAAA,EAAM,CAACC,GAAG,mBAAkB,SAAc,KACxFH,EAAAA,cAAA,UAAI,cAAWA,EAAAA,cAAA,cAAQ,2BAAgC,gBAAaA,EAAAA,cAACE,EAAAA,EAAM,CAACC,GAAG,2BAA0B,iBAAsB,QAAKH,EAAAA,cAAA,YAAM,kBAAqB,IAACA,EAAAA,cAACE,EAAAA,EAAM,CAACC,GAAG,qCAAoC,YAAiB,KAChOH,EAAAA,cAAA,UAAI,2CAAwCA,EAAAA,cAACE,EAAAA,EAAM,CAACC,GAAG,oBAAmB,WAAgB,+BAC1FH,EAAAA,cAAA,UAAI,iGAELA,EAAAA,cAAA,WAAK,+BAA4BA,EAAAA,cAACE,EAAAA,EAAM,CAACC,GAAG,qBAAoB,oBACvD,EAKJ,MAaMQ,EAAgBA,IAC5BX,EAAAA,cAAA,QACCY,QAAQ,gCACRC,KAAK,e,sECnFP,MAAMZ,GAA0Ca,EAAAA,EAAAA,aAE9C,CAAAjB,EAAoCkB,KAAG,IAAtC,SAAEC,EAAQ,UAAElB,KAAcmB,GAAOpB,EAAA,OAChCG,EAAAA,cAAA,MAAAkB,OAAAC,OAAA,CACIC,KAAK,aACAH,EAAK,CACVnB,UAAa,aAAYA,EAAa,IAAIA,IAAe,IACzDiB,IAAMA,IAEJM,EAAAA,SAASC,IAAKN,GAAUO,GAAKA,IAC7B,IAGVtB,EAAUuB,YAAc,YAExB,O","sources":["webpack://eagleeye-dev/./src/pages/index.tsx","webpack://eagleeye-dev/./src/partials/paragraph/component.tsx"],"sourcesContent":["import type { HeadFC } from 'gatsby';\n\nimport type { PageProps } from '../page-context';\n\nimport React from 'react';\n\nimport { graphql } from 'gatsby';\n\nimport Anchor from '../partials/anchor';\nimport CodeBlock from '../partials/code-block';\nimport Paragraph from '../partials/paragraph';\n\nimport '../partials/contents/index-page/style.scss';\n\nexport type Props = PageProps<{\n\tsite : {\n\t\tsiteMetadata : {\n\t\t\turl : {\n\t\t\t\tdemo : string,\n\t\t\t\tnpm : string\n\t\t\t}\n\t\t}\n\t}\n}>;\n\nconst IndexPage : React.FC<Props> = ({ className, data }) => (\n\t<article className={ `index-page ${ className }` }>\n\t\t<h1>Welcome to Eagle Eye JS!</h1>\n\t\t<Paragraph>An intuitive reactive context based React state manager. </Paragraph>\n\t\t<div>\n\t\t\t<label>Official:{ ' ' }\n\t\t\t\t<Anchor to={ data?.site.siteMetadata.url.npm as string }>\n\t\t\t\t\tReact-Observable-Context\n\t\t\t\t</Anchor>\n\t\t\t</label>\n\t\t</div>\n\t\t<div className=\"installation\">\n\t\t\t<header>Installation:</header>\n\t\t\t<label>\n\t\t\t\t<strong>Main:</strong>\n\t\t\t\t<CodeBlock isInline>\n\t\t\t\t\tnpm install --save react-eagleeye\n\t\t\t\t</CodeBlock>\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\t<strong>Alternate:</strong>\n\t\t\t\t<CodeBlock isInline>\n\t\t\t\t\tnpm install --save @webkrafters/react-observable-context\n\t\t\t\t</CodeBlock>\n\t\t\t</label>\n\t\t</div>\n\t\t<div>\n\t\t\t<label>Play with a demo app here on:{ ' ' }\n\t\t\t\t<Anchor to={ data?.site.siteMetadata.url.demo as string }>\n\t\t\t\t\tCode Sandbox\n\t\t\t\t</Anchor>\n\t\t\t</label>\n\t\t</div>\n\t\t<div>\n\t\t\t<label>License: <span>MIT</span></label>\n\t\t</div>\n\t\t<h2>Eagle Eye. Why now?</h2>\n\t\t<ul>\n\t\t\t<li>Auto-immutable update-friendly context. See <Anchor to=\"/concepts/store/setstate\"><code>store.setState</code></Anchor>.</li>\n\t\t\t<li>A context bearing an observable consumer <Anchor to=\"/concepts/store\">store</Anchor>.</li>\n\t\t\t<li>Recognizes <strong>negative array indexing</strong>. Please see <Anchor to=\"/concepts/property-path\">Property Path</Anchor> and <code>store.setState</code> <Anchor to=\"/concepts/store/setstate#indexing\">Indexing</Anchor>.</li>\n\t\t\t<li>Only re-renders subscribing components (<Anchor to=\"/concepts/client\">clients</Anchor>) on context state changes.</li>\n\t\t\t<li>Subscribing component decides which context state properties' changes to trigger its update.</li>\n\t\t</ul>\n\t\t<div>May see features history at <Anchor to=\"/history/features\">What's Changed?</Anchor></div>\n\t</article>\n);\n\nexport default IndexPage;\n\nexport const query = graphql`\n    query IntroTitle {\n        site {\n            siteMetadata {\n                url {\n\t\t\t\t\tdemo\n\t\t\t\t\tnpm\n\t\t\t\t}\n            }\n        }\n    }\n`;\n\nexport const Head : HeadFC = () => (\n\t<meta\n\t\tcontent=\"Welcome to Eagle Eye context!\"\n\t\tname=\"description\"\n\t/>\n);","import type { NamedExoticComponent } from 'react';\n\nimport React, { Children, forwardRef } from 'react';\n\nimport './style.scss';\n\nexport type Props = JSX.IntrinsicElements[ \"div\" ];\n\nconst Paragraph : NamedExoticComponent<Props> = forwardRef<\n    HTMLDivElement, Props\n>(({ children, className, ...props }, ref ) => (\n    <div\n        role=\"paragraph\"\n        { ...props }\n        className={ `paragraph${ className ? ` ${ className }` : '' }` }\n        ref={ ref }\n    >\n        { Children.map( children, c => c ) }\n    </div>\n));\n\nParagraph.displayName = 'Paragraph';\n\nexport default Paragraph;"],"names":["_ref","className","data","React","Paragraph","Anchor","to","site","siteMetadata","url","npm","CodeBlock","isInline","demo","Head","content","name","forwardRef","ref","children","props","Object","assign","role","Children","map","c","displayName"],"sourceRoot":""}