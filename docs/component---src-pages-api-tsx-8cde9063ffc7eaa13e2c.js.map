{"version":3,"file":"component---src-pages-api-tsx-8cde9063ffc7eaa13e2c.js","mappings":"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","sources":["webpack://eagleeye-dev/./src/pages/api.tsx","webpack://eagleeye-dev/./src/partials/list-item/component.tsx"],"sourcesContent":["import React from 'react';\n\nimport Anchor from '../partials/anchor';\nimport ListItem from '../partials/list-item';\n\nconst ApiPage : React.FC<{className? : string}> = ({ className }) => (\n    <article className={ `api-page ${ className }` }>\n        <h1>API</h1>\n        <div id=\"connect\">\n            <h3>connect</h3>\n            <ListItem><div>is a function taking an Eagle Eye context object and an optional <Anchor to=\"/concepts/selector-map\">selector map</Anchor> parameters; and returning a reusable connector function.</div></ListItem>\n            <ListItem><div>The connector function takes a client as a parameter and returns an HOC.</div></ListItem>\n            <ListItem><div>Any client using similar context object and selector map may be passed to this connector.</div></ListItem>\n            <ListItem><div>The HOC injects the context <Anchor to=\"/concepts/store\">store</Anchor> to the client and handles all of the context usage requirements.</div></ListItem>\n            <ListItem><div>The injected <Anchor to=\"/concepts/store\">store</Anchor> monitors changes in the underlying state slices referenced by the selector map.</div></ListItem>\n            <ListItem><div>A change in any of the referenced state slices automatically triggers an update of the related <code>store.data</code> property and a subsequent render of the client.</div></ListItem>\n            <ListItem><div>Any prop name conflicts between the injected <Anchor to=\"/concepts/store\">store properties</Anchor> and the client's own props are resolved in favor of the client's own props. Such a scenario may be remedied by renaming the conflicting key within the <Anchor to=\"/concepts/selector-map\">selector map</Anchor>.</div></ListItem>\n        </div>\n        <div id=\"create-context\">\n            <h3>createContext</h3>\n            <ListItem><div>is a zero-parameter function returning an Eagle Eye context object.</div></ListItem>\n            <ListItem><div>The returned object is the store-bearing context.</div></ListItem>\n            <ListItem><div>To access the context's <Anchor to=\"/concepts/store\">store</Anchor>, pass the context as a <code>context</code> parameter to either the <Anchor to=\"/api#connect\">connect</Anchor> function or the <Anchor to=\"/api#usecontext\">useContext</Anchor> hook.</div></ListItem>\n        </div>\n        <div id=\"usage-error\">\n            <h3>UsageError</h3>\n            <ListItem><div>is the Error type reported for attempts to access this context's store outside of its Provider component tree.</div></ListItem>\n        </div>\n        <div id=\"usecontext\">\n            <h3>useContext</h3>\n            <ListItem><div>is a hook taking an Eagle Eye context object and an optional <Anchor to=\"/concepts/selector-map\">selector map</Anchor> parameters; and returning the context <Anchor to=\"/concepts/store\">store</Anchor>.</div></ListItem>\n            <ListItem><div>The injected <Anchor to=\"/concepts/store\">store</Anchor> monitors changes in the underlying state slices referenced by the selector map.</div></ListItem>\n            <ListItem><div>A change in any of the referenced state slices automatically triggers an update of the related <code>store.data</code> property and a subsequent render of the client.</div></ListItem>\n            <ListItem><div>The <Anchor to=\"/api#connect\">connect</Anchor> function is axiomatically the more conducive method for consuming this conetxt.</div></ListItem>\n            <ListItem><div>In certain user-specific cases, direct access to this hook may be preferrable.</div></ListItem>\n            <ListItem><div>In such cases, it is advisable to wrap the client in a <code>React.memo()</code>.</div></ListItem>\n        </div>\n    </article>\n);\n\nexport default ApiPage;","import React, { cloneElement, useMemo } from 'react';\n\nimport './style.scss';\n\nconst getClassName = ({ className } : {\n    className? : string\n}) => (\n    `list-item${ className ? ` ${ className }` : '' }`\n);\n\nconst ListItem : React.FC<{children : JSX.Element}> = ({ children }) => {\n    const props = useMemo(() => ({\n        className: getClassName( children.props ),\n        role: children.props.role ?? 'listitem'\n    }), [\n        children.props.className,\n        children.props.role\n    ]);\n    return cloneElement( children, props );\n};\n\nListItem.displayName = 'ListItem';\n\nexport default ListItem;"],"names":["_ref","className","React","id","ListItem","Anchor","to","getClassName","_ref2","children","props","useMemo","_children$props$role","role","cloneElement","displayName"],"sourceRoot":""}