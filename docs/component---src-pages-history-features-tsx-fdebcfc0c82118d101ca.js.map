{"version":3,"file":"component---src-pages-history-features-tsx-fdebcfc0c82118d101ca.js","mappings":"sLAMA,MAAMA,EAA+CC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAAOE,EAAAA,cAAA,MAAIC,UAAU,gBAAiBF,EAAe,EACvHF,EAAKK,YAAc,uBAEnB,MAAMC,EAA+CC,IAAA,IAAC,SAAEL,GAAUK,EAAA,OAAOJ,EAAAA,cAAA,MAAIC,UAAU,cAAeF,EAAe,EA+CxGM,EAAgBA,IACzBL,EAAAA,cAAA,QACIM,QAAQ,oBACRC,KAAK,gBAIb,UApD4DC,IAAA,IAAC,UAAEP,GAAWO,EAAA,OACtER,EAAAA,cAAA,WAASC,UAAa,yBAAyBA,KAC3CD,EAAAA,cAAA,MAAIS,GAAG,WAAU,mBACjBT,EAAAA,cAAA,aACIA,EAAAA,cAAA,aAAOA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAAA,UAAI,YACjBA,EAAAA,cAAA,aACIA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAACG,EAAI,KAACH,EAAAA,cAAA,SAAG,OAAaA,EAAAA,cAACG,EAAI,KAACH,EAAAA,cAACU,EAAAA,EAAM,CAACC,GAAG,4BAA2BX,EAAAA,cAAA,YAAM,mBAA8B,4EAEhHA,EAAAA,cAAA,aAAOA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAAA,UAAI,YACjBA,EAAAA,cAAA,aACIA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAACG,EAAI,KAACH,EAAAA,cAAA,SAAG,OAAaA,EAAAA,cAACG,EAAI,KAACH,EAAAA,cAACU,EAAAA,EAAM,CAACC,GAAG,8BAA6BX,EAAAA,cAAA,YAAM,qBAAgC,4JAEpHA,EAAAA,cAAA,aAAOA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAAA,UAAI,YACjBA,EAAAA,cAAA,aACIA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAACG,EAAI,KAACH,EAAAA,cAAA,SAAG,OAAaA,EAAAA,cAACG,EAAI,KAACH,EAAAA,cAACU,EAAAA,EAAM,CAACC,GAAG,iCAAgC,QAAa,4DAAyDX,EAAAA,cAAA,SAAG,eAAe,iCAA8BA,EAAAA,cAAA,SAAG,gBAAgB,6FAE1NA,EAAAA,cAAA,aAAOA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAAA,UAAI,YACjBA,EAAAA,cAAA,aACIA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAACG,EAAI,KAACH,EAAAA,cAAA,SAAG,OAAaA,EAAAA,cAACG,EAAI,KAAC,WAAQH,EAAAA,cAAA,YAAM,aAAgB,6DAA0DA,EAAAA,cAAA,SAAG,wBAAqBA,EAAAA,cAAA,YAAM,QAAW,KAAK,OAE5KA,EAAAA,cAAA,aAAOA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAAA,UAAI,YACjBA,EAAAA,cAAA,aACIA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAACG,EAAI,KAACH,EAAAA,cAAA,SAAG,OAAaA,EAAAA,cAACG,EAAI,KAAC,SAAMH,EAAAA,cAAA,YAAM,aAAgB,kBAAeA,EAAAA,cAAA,YAAM,WAAc,+BAErGA,EAAAA,cAAA,aAAOA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAAA,UAAI,YACjBA,EAAAA,cAAA,aACIA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAACG,EAAI,KAACH,EAAAA,cAAA,SAAG,OAAaA,EAAAA,cAACG,EAAI,KAAC,sBAAmBH,EAAAA,cAACU,EAAAA,EAAM,CAACC,GAAG,iCAAgC,QAAa,4CAC7GX,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAG,OAAWA,EAAAA,cAAA,UAAI,0CAC5BA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAG,OAAWA,EAAAA,cAAA,UAAI,+CAA4CA,EAAAA,cAAA,YAAM,OAAU,gBACxFA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAG,OAAWA,EAAAA,cAAA,UAAI,uCAAoCA,EAAAA,cAAA,SAAG,WAAW,iBAAcA,EAAAA,cAACU,EAAAA,EAAM,CAACC,GAAG,iCAAgC,QAAa,YAASX,EAAAA,cAAA,SAAG,WAAa,KAAAA,EAAAA,cAAA,SAAG,UAAU,WAE9LA,EAAAA,cAAA,aAAOA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAAA,UAAI,YACjBA,EAAAA,cAAA,aACIA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAACG,EAAI,KAACH,EAAAA,cAAA,SAAG,OAAaA,EAAAA,cAACG,EAAI,KAAC,aAAUH,EAAAA,cAACU,EAAAA,EAAM,CAACC,GAAG,gBAAeX,EAAAA,cAAA,YAAM,YAAuB,mEACnGA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAG,OAAWA,EAAAA,cAAA,UAAI,iEAA8DA,EAAAA,cAACU,EAAAA,EAAM,CAACC,GAAG,4BAA2BX,EAAAA,cAAA,YAAM,qBACtIA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAG,OAAWA,EAAAA,cAAA,UAAI,gBAAaA,EAAAA,cAACU,EAAAA,EAAM,CAACC,GAAG,mBAAkBX,EAAAA,cAAA,YAAM,eAA0B,uCAAoCA,EAAAA,cAACU,EAAAA,EAAM,CAACC,GAAG,0BAAyBX,EAAAA,cAAA,YAAM,gBAA2B,aAC/MA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAG,OAAWA,EAAAA,cAAA,UAAI,yDAC5BA,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAG,OAAWA,EAAAA,cAAA,UAAIA,EAAAA,cAACU,EAAAA,EAAM,CAACC,GAAG,8BAA6BX,EAAAA,cAAA,YAAM,qBAAgC,mBAAgBA,EAAAA,cAACU,EAAAA,EAAM,CAACC,GAAG,2BAA0B,iBAAsB,kDACrLX,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAG,OAAWA,EAAAA,cAAA,UAAI,wCAAqCA,EAAAA,cAACU,EAAAA,EAAM,CAACC,GAAG,qBAAoB,WAAgB,wCAChHX,EAAAA,cAACH,EAAI,KAACG,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAG,OAAWA,EAAAA,cAAA,UAAI,wBAAqBA,EAAAA,cAAA,YAAM,kBAAqB,KAAEA,EAAAA,cAAA,YAAM,cAAiB,4FAAyFA,EAAAA,cAAA,YAAM,cAAiB,kGAGvN,C","sources":["webpack://eagleeye-dev/./src/pages/history/features.tsx"],"sourcesContent":["import type { HeadFC } from 'gatsby';\n\nimport React from 'react';\n\nimport Anchor from '../../partials/anchor';\n\nconst TRow : React.FC<{children: React.ReactNode}> = ({ children }) => ( <tr className=\"vertical-top\">{ children }</tr> );\nTRow.displayName = 'featuresHistory.TRow';\n\nconst TCol : React.FC<{children: React.ReactNode}> = ({ children }) => ( <td className=\"top-barred\">{ children }</td> );\n\nconst FeaturesHistoryPage : React.FC<{className: string}> = ({ className }) => (\n    <article className={ `features-history-page ${ className }` }>\n        <h1 id=\"changes\">What's Changed?</h1>\n        <table>\n            <thead><TRow><th>v4.7.0</th></TRow></thead>\n            <tbody>\n                <TRow><TCol><b>1.</b></TCol><TCol><Anchor to=\"/concepts/store/setstate\"><code>store.setState</code></Anchor> can now accept an array of updates for gurranteed orderly processing.</TCol></TRow>\n            </tbody>\n            <thead><TRow><th>v4.6.0</th></TRow></thead>\n            <tbody>\n                <TRow><TCol><b>1.</b></TCol><TCol><Anchor to=\"/concepts/store/resetstate\"><code>store.resetState</code></Anchor> can now update reset current state even when initial state does not exist. Formerly, a resetState call on a non-existent initial state had no effect.</TCol></TRow>\n            </tbody>\n            <thead><TRow><th>v4.5.0</th></TRow></thead>\n            <tbody>\n                <TRow><TCol><b>1.</b></TCol><TCol><Anchor to=\"/concepts/store/setstate/tags\">Tags</Anchor> to update non-existent state slices are now recognized. <b>Previously,</b> they had resulted in no-ops. <b>From now on,</b> they will result in new default slices matching the result of the given tag operation.</TCol></TRow>\n            </tbody>\n            <thead><TRow><th>v4.4.0</th></TRow></thead>\n            <tbody>\n                <TRow><TCol><b>1.</b></TCol><TCol>Returns <code>undefined</code> for selector map pointing at a non-existent state slice. <i>(Previously returned <code>null</code>)</i>.</TCol></TRow>\n            </tbody>\n            <thead><TRow><th>v4.3.0</th></TRow></thead>\n            <tbody>\n                <TRow><TCol><b>1.</b></TCol><TCol>Added <code>React.Ref</code> forwarding to <code>connect</code>ed hoc client components.</TCol></TRow>\n            </tbody>\n            <thead><TRow><th>v4.1.0</th></TRow></thead>\n            <tbody>\n                <TRow><TCol><b>1.</b></TCol><TCol>Added new setState <Anchor to=\"/concepts/store/setstate/tags\">tags</Anchor> to facilitate state update operations.</TCol></TRow>\n                <TRow><td><b>2.</b></td><td>Added negative indexing capabilities.</td></TRow>\n                <TRow><td><b>3.</b></td><td>Exposing the store via its Context Provider <code>ref</code> attribute.</td></TRow>\n                <TRow><td><b>4.</b></td><td>Exporting crucial constants such as <b>@@STATE</b> and setState <Anchor to=\"/concepts/store/setstate/tags\">tags</Anchor> such as <b>@@CLEAR</b>, <b>@@MOVE</b> etc.</td></TRow>\n            </tbody>\n            <thead><TRow><th>v4.0.0</th></TRow></thead>\n            <tbody>\n                <TRow><TCol><b>1.</b></TCol><TCol>Added the <Anchor to=\"/api#connect\"><code>connect</code></Anchor> function to facilitate the encapsulated context-usage method.</TCol></TRow>\n                <TRow><td><b>2.</b></td><td>Added stronger support for deeply nested state structure. See <Anchor to=\"/concepts/store/setstate\"><code>store.setState</code></Anchor></td></TRow>\n                <TRow><td><b>3.</b></td><td>Replaced the <Anchor to=\"/api#usecontext\"><code>useContext</code></Anchor> watchedKeys array parameter with a <Anchor to=\"/concepts/selector-map\"><code>selectorMap</code></Anchor> object.</td></TRow>\n                <TRow><td><b>4.</b></td><td>Removed the necessity for direct store subscription.</td></TRow>\n                <TRow><td><b>5.</b></td><td><Anchor to=\"/concepts/store/resetstate\"><code>store.resetState</code></Anchor> can now take a <Anchor to=\"/concepts/property-path\">property path</Anchor> array targeting which state slices to reset.</td></TRow>\n                <TRow><td><b>6.</b></td><td>Context provider accepts an optional <Anchor to=\"/concepts/storage\">storage</Anchor> prop for memorizing initial state.</td></TRow>\n                <TRow><td><b>7.</b></td><td>Removed the need for <code>store.getState</code>. <code>store.data</code> now holds the state slices used at the client. Changes in any of the slices held by the <code>store.data</code> are automatically updated as they occur. The client is immediately notified of the update.</td></TRow>\n            </tbody>\n        </table>\n    </article>\n);\n\nexport const Head : HeadFC = () => (\n    <meta\n        content=\"What\\'s changed?\"\n        name=\"description\"\n    />\n);\n\nexport default FeaturesHistoryPage;"],"names":["TRow","_ref","children","React","className","displayName","TCol","_ref2","Head","content","name","_ref3","id","Anchor","to"],"sourceRoot":""}