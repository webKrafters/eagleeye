{"version":3,"file":"component---src-pages-concepts-store-setstate-tags-clear-tsx-2746b52f9bd4b909f94f.js","mappings":"gMA0DA,UAf+DA,IAAA,IAAC,UAAEC,GAAWD,EAAA,OAEzEE,EAAAA,cAAA,WAASD,UAAa,+CAA+CA,KACjEC,EAAAA,cAAA,UAAIA,EAAAA,cAAA,YAAM,kBAAqB,sBAC/BA,EAAAA,cAAA,cAAQ,WACN,IACFA,EAAAA,cAAA,YAAS,6CACTA,EAAAA,cAAA,SAAK,IAAK,KACVA,EAAAA,cAAA,cAAQ,aACRA,EAAAA,cAAA,WAfP,iJAgBOA,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAACC,EAAAA,EAAS,KA3CjB,wwCA4Ca,EAKP,MAAMC,EAAgBA,IACzBF,EAAAA,cAAA,aAASG,EAAAA,EAASC,MAAO,Y","sources":["webpack://eagleeye-dev/./src/pages/concepts/store/setstate/tags/clear.tsx"],"sourcesContent":["import type { HeadFC } from 'gatsby';\n\nimport type { PageProps } from '../../../../../page-context';\n\nimport React from 'react';\n\nimport metadata from '../../../../../../gatsby-config/metadata';\n\nimport CodeBlock from '../../../../../partials/code-block';\n\nconst SAMPLE =\n`import { CLEAR_TAG } from '@webkrafters/react-observable-context'; // CLEAR_TAG = \"@@CLEAR\"\n\nconst state = {\n    a: { b: [{ x: 7, y: 8, z: 9 }, { x: 17, y: 18, z: 19 }] },\n    j: 10\n};\n\n/* empties the state; sets state = {} */\nstore.setState( CLEAR_TAG ) // or store.setState({ [ CLEAR_TAG ]: <anything> })\n\n/* empties the value at state.a.b; sets state.a.b = [] */\nstore.setState({ a: { b: CLEAR_TAG } }) // or store.setState({ a: { b: { [ CLEAR_TAG ]: <anything> } } })\n\n/* empties the value at state.a.j; sets state.a.j = null */\nstore.setState({ a: { j: CLEAR_TAG } }) // or store.setState({ a: { j: { [ CLEAR_TAG ]: <anything> } } })\n\n/* empties the value at state.a.b[ 0 ]; sets state.a.b = [{}] */\nstore.setState({ a: { b: [ CLEAR_TAG ] } }) // or store.setState({ a: { b: [ { [ CLEAR_TAG ]: <anything> } ] } })\n\n/* empties the value at state.a.b[0]; sets state.a.b = [{}, state.a.b[1]] */\nstore.setState({ a: { b: [ CLEAR_TAG, state.a.b[1] ] } }) // or store.setState({ a: { b: [ { [ CLEAR_TAG ]: <anything> }, state.a.b[1] ] } })\n\n/* empties the value at state.a.b[0]; sets state.a.b = [{}, a.b[1]] using indexing (RECOMMENDED) */\nstore.setState({ a: { b: { 0: CLEAR_TAG } } }) // or store.setState({ a: { b: { 0: { [ CLEAR_TAG ]: <anything> } } } })`;\n\nconst SAMPLE2 =\n`store.setState({\n    stateKey0: {\n        '@@CLEAR': <any> // the value has no effect - removes \\`state.stateKey0\\` all the same.\n    }\n});`;\n\nconst ConceptStoreSetStateClearTagPage : React.FC<PageProps> = ({ className }) => (\n    \n    <article className={ `concept-store-setstate-clear-tag-usage-page ${ className }` }>\n        <h1><code>store.setState</code> @@CLEAR Tag Usage</h1>\n        <strong>Sample:</strong>\n        { ' ' }\n        <code>{ `store.setState({ stateKey0: '@@CLEAR' });` }</code>\n        <p>{ ' ' } </p>\n        <strong>Sample 2:</strong>\n        <pre>{ SAMPLE2 }</pre>\n        <h4>Example:</h4>\n        <CodeBlock>{ SAMPLE }</CodeBlock>\n    </article>\n);\n\nexport default ConceptStoreSetStateClearTagPage;\n\nexport const Head : HeadFC = () => (\n    <title>{ metadata.title }: @@CLEAR</title>\n);"],"names":["_ref","className","React","CodeBlock","Head","metadata","title"],"sourceRoot":""}