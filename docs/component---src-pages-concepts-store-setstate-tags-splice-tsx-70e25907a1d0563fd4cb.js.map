{"version":3,"file":"component---src-pages-concepts-store-setstate-tags-splice-tsx-70e25907a1d0563fd4cb.js","mappings":"gMAgDA,UAVgEA,IAAA,IAAC,UAAEC,GAAWD,EAAA,OAC1EE,EAAAA,cAAA,WAASD,UAAa,gDAAgDA,KAClEC,EAAAA,cAAA,UAAIA,EAAAA,cAAA,YAAM,kBAAqB,uBAC/BA,EAAAA,cAAA,cAAQ,WACRA,EAAAA,cAAA,WAdP,2QAeOA,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAACC,EAAAA,EAAS,KAjCjB,uyBAkCa,EAKP,MAAMC,EAAgBA,IACzBF,EAAAA,cAAA,aAASG,EAAAA,EAASC,MAAO,a","sources":["webpack://eagleeye-dev/./src/pages/concepts/store/setstate/tags/splice.tsx"],"sourcesContent":["import type { HeadFC } from 'gatsby';\n\nimport type { PageProps } from '../../../../../page-context';\n\nimport React from 'react';\n\nimport metadata from '../../../../../../gatsby-config/metadata';\n\nimport CodeBlock from '../../../../../partials/code-block';\n\nconst SAMPLE =\n`import { SPLICE_TAG } from '@webkrafters/react-observable-context'; // SPLICE_TAG = \"@@SPLICE\"\n\nconst state = {\n    a: { b: [{ x: 7, y: 8, z: 9 }, { x: 17, y: 18, z: 19 }] },\n    j: 10,\n    q: [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]\n};\n\nstore.setState({ a: { [ SPLICE_TAG ]: [ 0, 1 ] } }); // assigning a '@@SPLICE' command to a non-array property has no effect.\n\n/* removes state.a.b[0]; leaving state.a.b = [{ x: 17, y: 18, z: 19 }] */\nstore.setState({ a: { b: { [ SPLICE_TAG ]: [ 0, 1 ] } } }) // or store.setState({ a: { b: { [ SPLICE_TAG ]: [ -2, -1 ] } } });\n\n/* replaces state.q[4] - [7] with 2 items; leaving state.q = [ 1, 2, 3, 4, 33, 88, 9 ] */\nstore.setState({ a: { q: { [ SPLICE_TAG ]: [ 4, 4, 33, 88 ] } } }) // or store.setState({ a: { q: { [ SPLICE_TAG ]: [ -5, 4, 33, 88 ] } } });`\n\nconst SAMPLE_CALL =\n`store.setState({\n    stateKey0: { // where \\`state.stateKey0\\` is an array\n        '@@SPLICE': [ // performs array splice on \\`state.stateKey0\\`.\n            -/+fromIndex,\n            deleteCount, // integer >= 0\n            ...newInserts?\n        ]\n    }\n});`;\n\nconst ConceptStoreSetStateSpliceTagPage : React.FC<PageProps> = ({ className }) => (\n    <article className={ `concept-store-setstate-splice-tag-usage-page ${ className }` }>\n        <h1><code>store.setState</code> @@SPLICE Tag Usage</h1>\n        <strong>Sample:</strong>\n        <pre>{ SAMPLE_CALL }</pre>\n        <h4>Example:</h4>\n        <CodeBlock>{ SAMPLE }</CodeBlock>\n    </article>\n);\n\nexport default ConceptStoreSetStateSpliceTagPage;\n\nexport const Head : HeadFC = () => (\n    <title>{ metadata.title }: @@SPLICE</title>\n);\n"],"names":["_ref","className","React","CodeBlock","Head","metadata","title"],"sourceRoot":""}